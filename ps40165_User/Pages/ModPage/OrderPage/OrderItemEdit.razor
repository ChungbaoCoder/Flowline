@inject IJSRuntime _js
@inject ProductService _svc

<table class="table">
    <caption>
        <div class="bg-light">
            <button class="btn btn-light" data-bs-toggle="modal" data-bs-target="#itemModal">+ Thêm mới</button>
        </div> 
    </caption>

    <thead class="table-light">
        <tr>

            <th>Tên sản phẩm</th>
            <th>Giá</th>
            <th>Số lượng mua</th>
            <th>Tổng</th>
            <th></th>

        </tr>
    </thead>

    <tbody>

        @foreach (var item in orderItems)
        {
            <tr>

                <td>@item.Name</td>
                <td>@item.Price</td>
                <td>@item.Amount</td>
                <td>@item.Total</td>
                <td class="text-center align-middle">
                    <div class="d-flex gap-1 m-0">
                        <button type="button" class="btn btn-sm p-0" @onclick="() => RemoveItem(item.ProductId)">🗑️</button>
                    </div>
                </td>

            </tr>
        }

    </tbody>

</table>

<div class="modal fade" id="itemModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title">Chọn sản phẩm</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>

            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">

                        @foreach (var product in products)
                        {
                            <div class="col-lg-3 col-sm-6">
                                <div class="row flex-nowrap custom-hover" @onclick="() => AddToOrder(product)">

                                    <div class="col-auto">
                                        <img src="@product.GetMainImage" alt="..." width="64" />
                                    </div>
                                    <div class="col text-truncate">
                                        <strong>@product.Name</strong>
                                    </div>

                                </div>
                            </div>
                        }

                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@code {
    [Parameter]
    public List<OrderItem> orderItems { get; set; } = new List<OrderItem>();
}

@code {
    List<Product> products = new List<Product>();

    private void AddToOrder(Product product)
    {
        var found = orderItems.FirstOrDefault(oi => oi.ProductId == product.Id);

        if (found is not null)
        {
            found.Amount++;
        }
        else
        {
            orderItems.Add(new OrderItem
            {
                ProductId = product.Id,
                SKU = product.SKU,
                Name = product.Name,
                ImagePath = product.GetMainImage,
                Amount = 1,
                Price = product.Price
            });
        }

        _js.InvokeVoidAsync("hideModal", "itemModal");
    }

    private void RemoveItem(int productId)
    {
        var found = orderItems.FirstOrDefault(oi => oi.ProductId == productId);

        if (found is not null)
        {
            orderItems.Remove(found);
        }
    }
}
