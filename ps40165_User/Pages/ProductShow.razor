@page "/products"
@layout StoreLayout

@inject NavigationManager _nav
@inject ProductService _svc

<div class="row">

    <aside class="col-3 border-2 border-end">
        <div class="list-group  list-group-flush">
            <a href="#" class="list-group-item list-group-item-action active" aria-current="true">
                The current link item
            </a>
            <a href="#" class="list-group-item list-group-item-action">A second link item</a>
            <a href="#" class="list-group-item list-group-item-action">A third link item</a>
            <a href="#" class="list-group-item list-group-item-action">A fourth link item</a>
            <a class="list-group-item list-group-item-action disabled" aria-disabled="true">A disabled link item</a>
        </div>
    </aside>

    <div class="row g-4">
        @foreach (var product in products)
        {
            <div class="col-md-4 col-sm-6">
                <div class="card h-100 shadow-sm">
                    <img src="@product.GetMainImage" class="card-img-top" alt="@product.Name" />
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text text-muted mb-2">@product.Description</p>
                        <div class="mt-auto d-flex justify-content-between align-items-center">
                            <span class="text-primary fw-bold">@($"{product.Price:C}")</span>
                            <button class="btn btn-sm btn-outline-primary">Xem chi tiết</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

</div>

@code {
    private List<Product> products = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        products = await _svc.GetListAsync(1, 3);
    }


}
