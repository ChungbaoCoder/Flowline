@page "/accounts/manage"
@layout StoreLayout

@attribute [Authorize(Roles = "Admin")]

@inject NavigationManager _nav
@inject AccountService _svc

<PageTitle>Quản lí tài khoản</PageTitle>

<div class="d-flex justify-content-between align-items-center">

    <h5 id="Table-title">Quản lí tài khoản</h5>

    <div class="input-group w-25">
        <input type="text" class="form-control" placeholder="Tìm kiếm ở đây" @bind="searchText">
        <button class="input-group-text" @onclick="Searching">🔍</button>
    </div>

</div>

<a href="#" class="btn btn-light">Filter</a>
<NavLink href="/accounts/create" activeClass="active" class="btn btn-light">+ Thêm mới</NavLink>

<div class="mt-3" style="max-height: 500px; overflow: auto;">
    <table class="table table-bordered">

        <thead class="table-light sticky-top">
            <tr>

                <th>Tên người dùng</th>
                <th>Email</th>
                <th>Số điện thoại</th>
                <th>Google Id</th>
                <th>Đăng nhập lần cuối</th>
                <th>Ngày tạo</th>
                <th>Ngày cập nhật</th>
                <th class="sticky-end" style="width: 30px"></th>

            </tr>
        </thead>

        <tbody>

            @if (!accounts.Any())
            {
                <tr>
                    <td colspan="8"></td>
                </tr>
            }
            else
            {
                @foreach (var account in accounts)
                {
                    <tr>
                        <td class="align-middle text-center">@account.Name</td>
                        <td class="align-middle text-center">@account.Email</td>
                        <td class="align-middle text-center">@account.PhoneNumber</td>
                        <td class="align-middle text-center">@account.GoogleUserId</td>
                        <td class="align-middle text-center">@account.LastLogin</td>
                        <td class="align-middle text-center">@account.CreatedOnUtc</td>
                        <td class="align-middle text-center">@account.UpdatedOnUtc</td>
                        <td class="align-middle text-center">
                            <div class="d-flex gap-1 m-0">
                                <button type="button" class="btn btn-sm p-0">✏️</button>
                                <button type="button" class="btn btn-sm p-0">🗑️</button>
                            </div>
                        </td>
                    </tr>
                }
            }

        </tbody>

        <tfoot class="sticky-bottom table-light">
            <tr>

                <td colspan="7">
                    <div class="d-flex justify-content-between align-items-center">

                        <ul class="d-flex m-0 gap-2 list-unstyled">
                            <li><button type="button" class="btn btn-sm btn-light" @onclick="PopulateList">↻</button></li>
                            <li><button type="button" class="btn btn-sm btn-light" @onclick="First">&lt;&lt;</button></li>
                            <li><button type="button" class="btn btn-sm btn-light" @onclick="PreviousPage">&lt;</button></li>

                            @for (int i = 1; i <= totalPage; i++)
                            {
                                var pageIndex = i;
                                <li>
                                    <button @onclick="() => ChangePage(pageIndex)" class="@(pageNumber == i ? "fw-bold" : "") btn btn-sm btn-light">@i</button>
                                </li>
                            }

                            <li><button class="btn btn-sm btn-light" @onclick="NextPage">&gt;</button></li>
                            <li><button class="btn btn-sm btn-light" @onclick="Last">&gt;&gt;</button></li>
                        </ul>

                        <p class="m-0">
                            Đang hiển thị 1-@pageSize trong số @totalItems sản phẩm
                        </p>

                    </div>
                </td>

                <td>
                    <select class="form-select form-select-sm" @onchange="SizeDisplayChanged">
                        <option selected value="25">Hiện 25 dòng</option>
                        <option value="50">Hiện 50 dòng</option>
                        <option value="100">Hiện 100 dòng</option>
                        <option value="150">Hiện 150 dòng</option>
                        <option value="200">Hiện 200 dòng</option>
                    </select>
                </td>

            </tr>
        </tfoot>

    </table>
</div>

@code {
    private List<Account> accounts = new List<Account>();

    private string? searchText;

    protected override async Task OnInitializedAsync()
    {
        await PopulateList();
    }

    private async Task PopulateList()
    {
        var result = await _svc.GetListAsync(pageNumber, pageSize, searchText);

        if (result.IsSuccess && result.Data is not null)
        {
            accounts = result.Data.Items;
            totalPage = result.Data.TotalPages;
            totalItems = result.Data.TotalCount;
        }
    }

    private async Task Searching()
    {
        await PopulateList();
    }

    private void GoToEdit(int id)
    {
        _nav.NavigateTo($"/accounts/edit/{id}");
    }
}

@code {
    private int pageNumber = 1;

    private int pageSize = 25;

    private int totalItems;

    private int totalPage;

    private async Task ChangePage(int page)
    {
        pageNumber = page;
        await PopulateList();
    }

    private async Task NextPage()
    {
        if (pageNumber < totalPage)
        {
            pageNumber++;
            await PopulateList();
        }
    }

    private async Task PreviousPage()
    {
        if (pageNumber > 1)
        {
            pageNumber--;
            await PopulateList();
        }
    }

    public async Task First()
    {
        pageNumber = 1;
        await PopulateList();
    }

    public async Task Last()
    {
        pageNumber = totalPage;
        await PopulateList();
    }

    private async Task SizeDisplayChanged(ChangeEventArgs e)
    {
        pageSize = int.Parse(e.Value.ToString());
        await PopulateList();
    }
}
