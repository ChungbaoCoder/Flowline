@page "/orders/edit/{id:int}"
@layout StoreLayout

@attribute [Authorize(Roles = "Admin, Moderator")]

@inject IJSRuntime _js
@inject NavigationManager _nav

<div class="d-flex justify-content-between align-items-center sticky-top">

    <div>
        <NavLink class="nav-link" href="/orders/manage" activeClass="active">⬅</NavLink>

        <h5 class="d-inline">Chỉnh sửa hóa đơn - @id</h5>
    </div>

    <div>
        <button type="submit" form="edit" class="btn btn-primary">✓ Lưu</button>
        <button type="submit" form="edit" class="btn btn-secondary">Lưu và chỉnh sửa thêm</button>
    </div>

</div>

<div class="row gap-3 mt-3">

    <aside class="col-2 border-end">
        <ul class="list-unstyled default-link">

            <li class="mt-2"><button class="btn border-0 custom-hover" @onclick="() => SetSection(Tab.Info)">Thông tin</button></li>
            <li class="mt-2"><button class="btn border-0 custom-hover" @onclick="() => SetSection(Tab.OrderedItem)">Sản phẩm</button></li>

        </ul>
    </aside>

    <main class="col-9">

        @if (currentTab == Tab.Info)
        {
            <div class="mb-3 d-flex">
                <label class="form-label" style="min-width: 225px;">Trạng thái</label>
                <div>
                    <button type="submit" class="btn btn-sm btn-danger confirm">Hủy đơn hàng</button>
                    <button type="submit" class="btn btn-sm btn-warning confirm">Hoàn thành</button>
                </div>
            </div>

            <div class="mb-3 d-flex">
                <label class="form-label" style="min-width: 225px;">Mã đơn hàng</label>
                <div>
                    @request.Id
                </div>
            </div>

            <div class="mb-3 d-flex">
                <label class="form-label" style="min-width: 225px;">Tên khách hàng</label>
                <div>
                    @request.Customer.CustomerName
                </div>
            </div>

            <div class="mb-3 d-flex">
                <label class="form-label" style="min-width: 225px;">Tổng số tiền</label>
                <div>
                    @request.Total
                </div>
            </div>
        }
        else
        {
            <OrderItemEdit orderItems="request.Items"></OrderItemEdit>
        }

    </main>

</div>

<ShowToast showToast="@showToast" message="@message"></ShowToast>

@code {
    [Parameter]
    public int id { get; set; }

    private Order request = new Order();  

    private async Task HandleValidSubmit()
    {
        if (firstTime)
        {
            firstTime = false;
            return;
        }

        showToast = true;

        await Task.Delay(500);
        await _js.InvokeVoidAsync("showSuccessToast");
    }
}

@code {
    private enum Tab
    {
        Info,
        OrderedItem
    }

    private Tab currentTab = Tab.Info;

    private bool firstTime = true;

    private bool showToast = false;

    private string message = string.Empty;

    protected override void OnInitialized()
    {
        firstTime = true;
        showToast = false;
    }

    private void SetSection(Tab section)
    {
        currentTab = section;
    }
}
