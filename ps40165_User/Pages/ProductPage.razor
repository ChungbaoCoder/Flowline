@page "/products"

@inject ProductService _svc

<div class="row">

    <menu class="col">

        <h4>Sản phẩm</h4>

        <ul class="nav gap-2">
            <li><a href="" class="nav-link p-0 text-body-secondary">a</a></li>
            <li><a href="" class="nav-link p-0 text-body-secondary">b</a></li>
            <li><a href="" class="nav-link p-0 text-body-secondary">c</a></li>
        </ul>

        <div class="row row-cols-1 row-cols-md-3 g-4 mt-2">

            <div class="col">
                <div class="card h-100">
                    <img src="..." class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">Card title</h5>
                        <p class="card-text">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
                    </div>
                </div>
            </div>

            <div class="col">
                <div class="card h-100">
                    <img src="..." class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">Card title</h5>
                        <p class="card-text">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
                    </div>
                </div>
            </div>

            <div class="col">
                <div class="card h-100">
                    <img src="..." class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">Card title</h5>
                        <p class="card-text">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
                    </div>
                </div>
            </div>

            <div class="col">
                <div class="card h-100">
                    <img src="..." class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">Card title</h5>
                        <p class="card-text">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
                    </div>
                </div>
            </div>

        </div>

        <nav class="mt-3">
            <ul class="pagination">

                <li class="page-item">
                    <a class="page-link" href="#">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>

                <li class="page-item"><a class="page-link" href="#">1</a></li>
                <li class="page-item"><a class="page-link" href="#">2</a></li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>

                <li class="page-item">
                    <a class="page-link" href="#">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>

            </ul>
        </nav>

    </menu>

    <aside class="col-3">

        <h4>Thể loại</h4>

        <ul class="list-group list-group-flush">
            <li class="list-group-item">An item</li>
            <li class="list-group-item">A second item</li>
            <li class="list-group-item">A third item</li>
            <li class="list-group-item">A fourth item</li>
            <li class="list-group-item">And a fifth one</li>
        </ul>

    </aside>

</div>

@code {
    private List<Product> products = new List<Product>();

    private string? searchText;

    protected override async Task OnInitializedAsync()
    {
        await PopulateData();
    }

    private async Task PopulateData()
    {
        var response = await _svc.GetList(1, 25, searchText);

        if (response is not null)
        {
            products = response.Data;
        }
    }
}

@code {
    private int pageNumber = 1;

    private int pageSize = 25;

    private int totalItems;

    private int totalPage;

    private async Task ChangePage(int page)
    {
        pageNumber = page;
        await PopulateData();
    }

    private async Task NextPage()
    {
        if (pageNumber < totalPage)
        {
            pageNumber++;
            await PopulateData();
        }
    }

    private async Task PreviousPage()
    {
        if (pageNumber > 1)
        {
            pageNumber--;
            await PopulateData();
        }
    }

    public async Task First()
    {
        pageNumber = 1;
        await PopulateData();
    }

    public async Task Last()
    {
        pageNumber = totalPage;
        await PopulateData();
    }

    private async Task SizeDisplayChanged(ChangeEventArgs e)
    {
        pageSize = int.Parse(e.Value.ToString());
        await PopulateData();
    }
}
