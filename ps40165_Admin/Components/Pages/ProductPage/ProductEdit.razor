@page "/products/edit/{id:int}"

@inject ProductService service
@inject NavigationManager NavigationManager

<h3>ProductEdit</h3>

<EditForm Model="@product" OnValidSubmit="EditProduct">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="categoryId">Category</label>
        <InputNumber id="categoryId" class="form-control" @bind-Value="product.CategoryId" />
    </div>

    <div class="form-group">
        <label for="name">Name</label>
        <InputText id="name" class="form-control" @bind-Value="product.Name" />
    </div>

    <div class="form-group">
        <label for="description">Description</label>
        <InputTextArea id="description" class="form-control" @bind-Value="product.Description" />
    </div>

    <div class="form-group">
        <label for="underDescription">Under Description</label>
        <InputTextArea id="underDescription" class="form-control" @bind-Value="product.UnderDescription" />
    </div>

    <div class="form-group">
        <label for="stockLevel">Stock Level</label>
        <InputNumber id="stockLevel" class="form-control" @bind-Value="product.StockLevel" />
    </div>

    <div class="form-group">
        <label for="price">Price</label>
        <InputNumber id="price" class="form-control" @bind-Value="product.Price" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    private PutProduct product;

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            var result = await service.GetProductById(Id);

            product = new PutProduct
            {
                CategoryId = result.Data.CategoryId,
                Name = result.Data.Name,
                Description = result.Data.Description,
                UnderDescription = result.Data.UnderDescription,
                StockLevel = result.Data.StockLevel,
                Price = result.Data.Price
            };
        }
    }

    private async Task EditProduct()
    {
        if (product != null)
        {
            await service.EditProduct(Id, product);
        }
    }
}
