@page "/categories/create"
@layout StoreLayout

@attribute [Authorize(Roles = "Admin, Moderator")]

@inject IJSRuntime _js
@inject NavigationManager _nav
@inject CategoryService _svc

<div class="d-flex justify-content-between align-items-center sticky-top">

    <div>
        <NavLink class="nav-link" href="/categorys/manage" activeClass="active">⬅</NavLink>

        <h5 class="d-inline">Tạo loại sản phẩm</h5>
    </div>

    <div>
        <button type="submit" form="edit" class="btn btn-primary">✓ Lưu</button>
        <button type="submit" form="edit" class="btn btn-secondary">Lưu và chỉnh sửa thêm</button>
    </div>

</div>

@if (error)
{
    <div class="alert alert-danger mt-3" role="alert">
        ❌ Trường còn để trống
    </div>
}

<div class="row gap-3 mt-3">

    <aside class="col-2 border-end">
        <ul class="list-unstyled">

            <li class="mt-2"><button>Thông tin</button></li>

        </ul>
    </aside>

    <main class="col-9">

        <EditForm id="edit" Model="@category" FormName="EditCategory" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit" class="needs-validation">
            <DataAnnotationsValidator />

            <div class="mb-3 d-flex">
                <label class="form-label mt-2" style="min-width: 225px;">Tên loại</label>
                <div>
                    <InputText class="form-control" style="min-width: 425px;" @bind-Value="category.Name" />
                </div>
            </div>

            <div class="mb-3 d-flex">
                <label class="form-label mt-2" style="min-width: 225px;">Nội dung</label>
                <div>
                    <InputTextArea class="form-control" style="min-width: 425px;" @bind-Value="category.Description" />
                </div>
            </div>

            <div class="mb-3 d-flex">
                <label class="form-label mt-2" style="min-width: 225px;">Mục tìm kiếm</label>
                <div>
                    <InputText class="form-control" style="min-width: 425px;" @bind-Value="category.Alias" />
                </div>
            </div>

        </EditForm>

    </main>

</div>

<ShowToast showToast="@showToast" message="@message"></ShowToast>

@code {
    private Category category = new Category();
}

@code {
    private bool error = false;

    private bool firstLoad = true;

    private bool showToast = false;

    private string message = string.Empty;

    private async Task HandleValidSubmit()
    {
        if (firstLoad)
        {
            firstLoad = false;
            return;
        }

        error = false;
        showToast = true;

        AddCategoryRequest request = new AddCategoryRequest
            {
                Name = category.Name,
                Description = category.Description,
                Alias = category.Alias
            };

        await _svc.PostCategory(request);

        await _js.InvokeVoidAsync("showSuccessToast");
    }

    private void HandleInvalidSubmit()
    {
        error = true;
    }
}

